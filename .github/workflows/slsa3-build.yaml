on: workflow_dispatch

jobs:
  # This step builds our artifacts, uploads them to the workflow run, and
  # outputs their digest.
  build:
    outputs:
      artifacts: $${{ steps.build.outputs.artifacts }}
      hashes: ${{ steps.hash.outputs.hashes }}
    runs-on: ubuntu-latest
    steps:
      - name: Build gradle artifacts
        id: build
        run: |
          ./gradlew clean build
          # this assumes all outputs are in the ./build/libs directory
          echo "::set-output name=artifacts::$(find ./build/libs -type f)"

      - name: Generate artifact list and hashes
        shell: bash
        id: hash
        run: |
          echo "::set-output name=hashes::$(sha256sum ${{ steps.build.outputs.artifacts }} | base64 -w0)"

      - name: Upload build artifacts
        uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8 # tag=v3.1.0
        with:
          name: gradle-build-outputs
          path: ${{ steps.build.outputs.artifacts }}
          if-no-files-found: error

  # This step calls the generic workflow to generate provenance.
  provenance:
    needs: [build]
    permissions:
      actions: read
      id-token: write
      contents: read
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@main
    with:
      base64-subjects: "${{ needs.build.outputs.hashes }}"
      # Upload provenance to a new release
      upload-assets: true

  # This step uploads our artifacts to the tagged GitHub release.
  release:
    needs: [build, provenance]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download gradle-build-outputs
        uses: actions/download-artifact@fb598a63ae348fa914e94cd0ff38f362e927b741 # tag=v2.1.0
        with:
          name: gradle-build-outputs

      - name: Upload assets
        uses: softprops/action-gh-release@1e07f4398721186383de40550babbdf2b84acfc5 # v0.1.14
        with:
          files: "${{ needs.build.outputs.artifacts }}"
